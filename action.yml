name: 'Rust Toolchain'
description: 'Set the Rust Toolchain to a specific version'
inputs:
  components:  # id of input
    description: 'Extra components to install'
    required: false
    default: ''
runs:
  using: "composite"
  steps:

    - name: Get Rust Version from Cargo.toml
      if: "${{ env.RUST_VERSION == '' }}"
      run: |
        set -e
        # yq includes tomlq
        sudo go install github.com/mikefarah/yq/v4@latest  
        echo "RUST_VERSION=$(tomlq -r ".package.rust" Cargo.toml 2>/dev/null || echo stable)" >> $GITHUB_ENV
        # Clean older versions of rustfmt and cargo-fmt to prevent warnings
        rm -f /home/runner/.cargo/bin/rustfmt
        rm -f /home/runner/.cargo/bin/cargo-fmt
      shell: bash

    - if: "${{ inputs.components == '' }}"
      name: Install Rust toolchain
      id: toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ env.RUST_VERSION }}
        override: true 

    - if: "${{ inputs.components == '' }}"
      name: Display Rust Version
      run: |
        echo "Display Rust Version"
        echo "rustc: ${{ steps.toolchain.outputs.rustc }}"
        echo "rustc_hash: ${{ steps.toolchain.outputs.rustc_hash }}"
        echo "cargo: ${{ steps.toolchain.outputs.cargo }}"
        echo "rustup: ${{ steps.toolchain.outputs.rustup }}" 
      shell: bash   

    - if: "${{ inputs.components != '' }}"
      name: Install Rust toolchain and components
      id: toolchain_components
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ env.RUST_VERSION }}
        components: ${{ inputs.components }}    
        override: true 

    - if: "${{ inputs.components != '' }}"
      name: Display Rust Version
      run: |
        echo "Display Rust Version"
        echo "rustc: ${{ steps.toolchain_components.outputs.rustc }}"
        echo "rustc_hash: ${{ steps.toolchain_components.outputs.rustc_hash }}"
        echo "cargo: ${{ steps.toolchain_components.outputs.cargo }}"
        echo "rustup: ${{ steps.toolchain_components.outputs.rustup }}" 
      shell: bash     

    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        version: '3.x'
        repo-token: ${{ github.token }}
